{-# OPTIONS --safe --sized-types #-}

module Cwf.DomainCwf.UniType.RelationDecidable where

open import Base.Core
open import Cwf.DomainCwf.UniType.Definition
open import Cwf.DomainCwf.UniType.FinFun
open import Cwf.DomainCwf.UniType.Relation

test : ‚àÄ {i} ‚Üí {f g : FinFun {i}} ‚Üí (‚àÄ {u v u‚Ä≤ v‚Ä≤} ‚Üí (u , v) ‚àà f ‚Üí (u‚Ä≤ , v‚Ä≤) ‚àà f ‚Üí Decidable (u ‚äë u‚Ä≤)) ‚Üí Decidable ((F f) ‚äë (F g))
test = {!!}

relationDecidable : ‚àÄ {i} ‚Üí {u v : Nbh {i}} ‚Üí Decidable (u ‚äë v)
relationDecidable {u = ‚ä•} {v} = inl (‚äë-bot {!!})
relationDecidable {u = 0·µ§} {v} = {!!}
relationDecidable {u = s u} {v} = {!!}
relationDecidable {u = ‚Ñï} {v} = {!!}
relationDecidable {u = F x} {‚ä•} = {!!}
relationDecidable {u = F x} {0·µ§} = {!!}
relationDecidable {u = F x} {s v} = {!!}
relationDecidable {u = F x} {‚Ñï} = {!!}
relationDecidable {u = F f} {F g} = test {f = f} {g} (\{u} {v} {u‚Ä≤} {v} _ _ ‚Üí relationDecidable {u = u} {u‚Ä≤})
relationDecidable {u = F x} {refl v} = {!!}
relationDecidable {u = F x} {I v v‚ÇÅ v‚ÇÇ} = {!!}
relationDecidable {u = F x} {Œ† v x‚ÇÅ} = {!!}
relationDecidable {u = F x} {ùí∞} = {!!}
relationDecidable {u = F x} {incons} = {!!}
relationDecidable {u = refl u} {v} = {!!}
relationDecidable {u = I u u‚ÇÅ u‚ÇÇ} {v} = {!!}
relationDecidable {u = Œ† u x} {v} = {!!}
relationDecidable {u = ùí∞} {v} = {!!}
relationDecidable {u = incons} {v} = {!!}
