module Cwf.DomainCwf.UniType.ConsistencyLemmata where

open import Base.Core
open import Base.FinFun
open import Cwf.DomainCwf.UniType.Consistency
open import Cwf.DomainCwf.UniType.Definition

open import Agda.Builtin.Equality

subsetIsCon : ‚àÄ {f g} ‚Üí f ‚äÜ g ‚Üí conFinFun g ‚Üí conFinFun f
subsetIsCon f‚äÜg (conPairsg , conElemsg)
  = (Œª uv‚ààf u‚Ä≤v‚Ä≤‚ààf conuu‚Ä≤ ‚Üí conPairsg (f‚äÜg uv‚ààf) (f‚äÜg u‚Ä≤v‚Ä≤‚ààf) conuu‚Ä≤) ,
    (Œª uv‚ààf ‚Üí conElemsg (f‚äÜg uv‚ààf))

conLemma‚ÇÅ : ‚àÄ {u v} ‚Üí con (u ‚äî v) ‚Üí con u
conLemma‚ÇÅ {‚ä•} _ = *
conLemma‚ÇÅ {0·µ§} _ = *
conLemma‚ÇÅ {s _} {‚ä•} conuv = conuv
conLemma‚ÇÅ {s u} {s _} conuv = conLemma‚ÇÅ {u} conuv
conLemma‚ÇÅ {‚Ñï} _ = *
conLemma‚ÇÅ {F _} {‚ä•} conuv = conuv
conLemma‚ÇÅ {F f} {F g} (conPairsfg , conElemsfg)
  = (Œª uv‚ààf u‚Ä≤v‚Ä≤‚ààf conuu‚Ä≤ ‚Üí conPairsfg (‚à™-lemma‚ÇÉ uv‚ààf) (‚à™-lemma‚ÇÉ u‚Ä≤v‚Ä≤‚ààf) conuu‚Ä≤) ,
    (Œª uv‚ààf ‚Üí conElemsfg (‚à™-lemma‚ÇÉ uv‚ààf))
conLemma‚ÇÅ {refl _} {‚ä•} conuv = conuv
conLemma‚ÇÅ {refl u} {refl v} conuv = conLemma‚ÇÅ {u} conuv
conLemma‚ÇÅ {I _ _ _} {‚ä•} conuv = conuv
conLemma‚ÇÅ {I U u v} {I U‚Ä≤ u‚Ä≤ v‚Ä≤} (conUU‚Ä≤ , (conuu‚Ä≤ , convv‚Ä≤))
  = (conLemma‚ÇÅ {U} conUU‚Ä≤) , (conLemma‚ÇÅ {u} conuu‚Ä≤ , conLemma‚ÇÅ {v} convv‚Ä≤)
conLemma‚ÇÅ {Œ† _ _} {‚ä•} conuv = conuv
conLemma‚ÇÅ {Œ† u f} {Œ† v g} (conuv , confg)
  = conLemma‚ÇÅ {u} conuv , subsetIsCon (‚à™-lemma‚ÇÉ {ùëì‚Ä≤ = g}) confg
conLemma‚ÇÅ {ùí∞} _ = *

conLemma‚ÇÇ : ‚àÄ {u v} ‚Üí con (u ‚äî v) ‚Üí con v
conLemma‚ÇÇ {v = ‚ä•} _ = *
conLemma‚ÇÇ {v = 0·µ§} _ = *
conLemma‚ÇÇ {‚ä•} {s _} conuv = conuv
conLemma‚ÇÇ {s u} {s _} conuv = conLemma‚ÇÇ {u} conuv
conLemma‚ÇÇ {v = ‚Ñï} _ = *
conLemma‚ÇÇ {‚ä•} {F _} conuv = conuv
conLemma‚ÇÇ {F f} {F g} (conPairsfg , conElemsfg)
  = (Œª uv‚ààg u‚Ä≤v‚Ä≤‚ààg conuu‚Ä≤ ‚Üí conPairsfg (‚à™-lemma‚ÇÑ uv‚ààg) (‚à™-lemma‚ÇÑ u‚Ä≤v‚Ä≤‚ààg) conuu‚Ä≤) ,
    (Œª uv‚ààg ‚Üí conElemsfg (‚à™-lemma‚ÇÑ uv‚ààg))
conLemma‚ÇÇ {‚ä•} {refl _} conuv = conuv
conLemma‚ÇÇ {refl u} {refl v} conuv = conLemma‚ÇÇ {u} conuv
conLemma‚ÇÇ {‚ä•} {I _ _ _} conuv = conuv
conLemma‚ÇÇ {I U u v} {I U‚Ä≤ u‚Ä≤ v‚Ä≤} (conUU‚Ä≤ , (conuu‚Ä≤ , convv‚Ä≤))
  = conLemma‚ÇÇ {U} conUU‚Ä≤ , (conLemma‚ÇÇ {u} conuu‚Ä≤ , conLemma‚ÇÇ {v} convv‚Ä≤)
conLemma‚ÇÇ {‚ä•} {Œ† _ _} conuv = conuv
conLemma‚ÇÇ {Œ† u f} {Œ† v g} (conuv , confg)
  = conLemma‚ÇÇ {u} conuv , subsetIsCon (‚à™-lemma‚ÇÑ {ùëì‚Ä≤ = g}) confg
conLemma‚ÇÇ {v = ùí∞} _ = *
conLemma‚ÇÇ {‚ä•} {incons} conuv = conuv
conLemma‚ÇÇ {0·µ§} {incons} conuv = conuv
conLemma‚ÇÇ {s u} {incons} conuv = conuv
conLemma‚ÇÇ {‚Ñï} {incons} conuv = conuv
conLemma‚ÇÇ {F _} {incons} conuv = conuv
conLemma‚ÇÇ {Œ† _ _} {incons} conuv = conuv
conLemma‚ÇÇ {ùí∞} {incons} conuv = conuv
conLemma‚ÇÇ {incons} {incons} conuv = conuv

conLemma‚ÇÉ' : ‚àÄ {f} ‚Üí conFinFun f ‚Üí conFinFun (f ‚à™ f)
conLemma‚ÇÉ' {f} (conPairs , conElems)
  = (Œª uv‚àà‚à™ u‚Ä≤v‚Ä≤‚àà‚à™ ‚Üí conPairs (‚à™-lemma‚Çâ uv‚àà‚à™) (‚à™-lemma‚Çâ u‚Ä≤v‚Ä≤‚àà‚à™))
  , (Œª uv‚àà‚à™ ‚Üí (‚ä†-fst (conElems (‚à™-lemma‚Çâ uv‚àà‚à™))) , ‚ä†-snd (conElems (‚à™-lemma‚Çâ uv‚àà‚à™)))

conLemma‚ÇÉ : ‚àÄ {u} ‚Üí con u ‚Üí con (u ‚äî u)
conLemma‚ÇÉ {‚ä•} conu = *
conLemma‚ÇÉ {0·µ§} conu = *
conLemma‚ÇÉ {s u} conu = conLemma‚ÇÉ {u} conu
conLemma‚ÇÉ {‚Ñï} conu = *
conLemma‚ÇÉ {F f} conu = conLemma‚ÇÉ' conu
conLemma‚ÇÉ {refl u} conu = conLemma‚ÇÉ {u} conu
conLemma‚ÇÉ {I U u v} (conU , (conu , conv))
  = (conLemma‚ÇÉ {U} conU) , (conLemma‚ÇÉ {u} conu , conLemma‚ÇÉ {v} conv)
conLemma‚ÇÉ {Œ† U f} (conU , conf) = conLemma‚ÇÉ {U} conU , conLemma‚ÇÉ' {f = f} conf
conLemma‚ÇÉ {ùí∞} conu = *
conLemma‚ÇÉ {incons} conu = conu


conFinFunSym : ‚àÄ {f g} ‚Üí conFinFun (f ‚à™ g) ‚Üí conFinFun (g ‚à™ f)
conFinFunSym {f} (conPairsfg , conElemsfg)
  = (Œª uv‚àà‚à™ u‚Ä≤v‚Ä≤‚àà‚à™ conuu‚Ä≤ ‚Üí conPairsfg (‚à™-lemma‚ÇÜ {ùëì‚Ä≤ = f} uv‚àà‚à™) (‚à™-lemma‚ÇÜ {ùëì‚Ä≤ = f} u‚Ä≤v‚Ä≤‚àà‚à™) conuu‚Ä≤) ,
    (Œª uv‚àà‚à™ ‚Üí conElemsfg (‚à™-lemma‚ÇÜ {ùëì‚Ä≤ = f} uv‚àà‚à™))

conSym : ‚àÄ {u v} ‚Üí con (u ‚äî v) ‚Üí con (v ‚äî u)
conSym {‚ä•} {‚ä•} _ = *
conSym {‚ä•} {0·µ§} _ = *
conSym {‚ä•} {s _} conuv = conuv
conSym {‚ä•} {‚Ñï} _ = *
conSym {‚ä•} {F _} conuv = conuv
conSym {‚ä•} {refl _} conuv = conuv
conSym {‚ä•} {I _ _ _} conuv = conuv
conSym {‚ä•} {Œ† _ _} conuv = conuv
conSym {‚ä•} {ùí∞} _ = *
conSym {0·µ§} {‚ä•} _ = *
conSym {0·µ§} {0·µ§} _ = *
conSym {s _} {‚ä•} conuv = conuv
conSym {s u} {s _} conuv = conSym {u} conuv
conSym {‚Ñï} {‚ä•} _ = *
conSym {‚Ñï} {‚Ñï} _ = *
conSym {F _} {‚ä•} conuv = conuv
conSym {F f} {F g} conuv = conFinFunSym {f = f} conuv
conSym {refl _} {‚ä•} conuv = conuv
conSym {refl u} {refl v} conuv = conSym {u} conuv
conSym {I _ _ _} {‚ä•} conuv = conuv
conSym {I U u v} {I U‚Ä≤ u‚Ä≤ v‚Ä≤} (conUU‚Ä≤ , (conuu‚Ä≤ , convv‚Ä≤))
  = (conSym {U} conUU‚Ä≤) , (conSym {u} conuu‚Ä≤ , conSym {v} convv‚Ä≤)
conSym {Œ† _ _} {‚ä•} conuv = conuv
conSym {Œ† u f} {Œ† _ _} (conuv , confg) = (conSym {u} conuv) , conFinFunSym {f = f} confg
conSym {ùí∞} {‚ä•} _ = *
conSym {ùí∞} {ùí∞} _ = *

conFinFunAssoc : ‚àÄ {f g h} ‚Üí conFinFun (f ‚à™ (g ‚à™ h)) ‚Üí conFinFun ((f ‚à™ g) ‚à™ h)
conFinFunAssoc {f} {g} {h} (conPairsfgh , conElemsfgh)
  = (Œª uv‚àà u‚Ä≤v‚Ä≤‚àà conuu‚Ä≤ ‚Üí conPairsfgh (‚à™-lemma‚Çà {ùëì = f} uv‚àà) (‚à™-lemma‚Çà {ùëì = f} u‚Ä≤v‚Ä≤‚àà) conuu‚Ä≤) ,
    (Œª uv‚àà ‚Üí conElemsfgh (‚à™-lemma‚Çà {ùëì = f} uv‚àà))

conAssoc'' : ‚àÄ {u v} ‚Üí con (u ‚äî v) ‚Üí con ((u ‚äî ‚ä•) ‚äî v)
conAssoc'' {‚ä•} conuv = conuv
conAssoc'' {0·µ§} conuv = conuv
conAssoc'' {s _} conuv = conuv
conAssoc'' {‚Ñï} conuv = conuv
conAssoc'' {F _} conuv = conuv
conAssoc'' {refl _} conuv = conuv
conAssoc'' {I _ _ _} conuv = conuv
conAssoc'' {Œ† _ _} conuv = conuv
conAssoc'' {ùí∞} conuv = conuv

conAssoc' : ‚àÄ {u} ‚Üí con u ‚Üí con (u ‚äî ‚ä•)
conAssoc' {‚ä•} _ = *
conAssoc' {0·µ§} _ = *
conAssoc' {s _} conu = conu
conAssoc' {‚Ñï} _ = *
conAssoc' {F _} conf = conf
conAssoc' {refl _} conu = conu
conAssoc' {I _ _ _} conu = conu
conAssoc' {Œ† _ _} conu = conu
conAssoc' {ùí∞} _ = *

conAssoc‚ÇÅ : ‚àÄ {u v w} ‚Üí con (u ‚äî (v ‚äî w)) ‚Üí con ((u ‚äî v) ‚äî w)
conAssoc‚ÇÅ {u} conuvw with (conLemma‚ÇÅ {u} conuvw) | conLemma‚ÇÇ {u} conuvw
conAssoc‚ÇÅ {u} {v} _ | _ | convw with (conLemma‚ÇÅ {v} convw) |  conLemma‚ÇÇ {v} convw
conAssoc‚ÇÅ {u} {‚ä•} {w} conuvw | _ | _ | _ | _ = conAssoc'' {u} conuvw
conAssoc‚ÇÅ {u} {0·µ§} {‚ä•} conuvw | _ | _ | _ | _ = conAssoc' {u ‚äî 0·µ§} conuvw
conAssoc‚ÇÅ {‚ä•} {0·µ§} {0·µ§} _ | _ | _ | _ | _ = *
conAssoc‚ÇÅ {0·µ§} {0·µ§} {0·µ§} _ | _ | _ | _ | _ = *
conAssoc‚ÇÅ {u} {s v} {‚ä•} conuvw | _ | _ | _ | _ = conAssoc' {u ‚äî s v} conuvw
conAssoc‚ÇÅ {‚ä•} {s _} {s _} conuvw | _ | _ | _ | _ = conuvw
conAssoc‚ÇÅ {s u} {s _} {s _} conuvw | _ | _ | _ | _ = conAssoc‚ÇÅ {u} conuvw
conAssoc‚ÇÅ {u} {‚Ñï} {‚ä•} conuvw | _ | _ | _ | _ = conAssoc' {u ‚äî ‚Ñï} conuvw
conAssoc‚ÇÅ {‚ä•} {‚Ñï} {‚Ñï} _ | _ | _ | _ | _ = *
conAssoc‚ÇÅ {‚Ñï} {‚Ñï} {‚Ñï} _ | _ | _ | _ | _ = *
conAssoc‚ÇÅ {u} {F f} {‚ä•} conuvw | _ | _ | _ | _ = conAssoc' {u ‚äî F f} conuvw
conAssoc‚ÇÅ {‚ä•} {F _} {F _} conuvw | _ | _ | _ | _ = conuvw
conAssoc‚ÇÅ {F f} {F _} {F _} conuvw | _ | _ | _ | _ = conFinFunAssoc {f = f} conuvw
conAssoc‚ÇÅ {u} {refl v} {‚ä•} conuvw | _ | _ | _ | _ = conAssoc' {u ‚äî refl v} conuvw
conAssoc‚ÇÅ {‚ä•} {refl _} {refl _} conuvw | _ | _ | _ | _ = conuvw
conAssoc‚ÇÅ {refl u} {refl _} {refl _} conuvw | _ | _ | _ | _ = conAssoc‚ÇÅ {u} conuvw
conAssoc‚ÇÅ {u} {I U‚Ä≤ u‚Ä≤ v‚Ä≤} {‚ä•} conuvw | _ | _ | _ | _ = conAssoc' {u ‚äî I U‚Ä≤ u‚Ä≤ v‚Ä≤} conuvw
conAssoc‚ÇÅ {‚ä•} {I U‚Ä≤ u‚Ä≤ v‚Ä≤} {I U‚Ä≥ u‚Ä≥ v‚Ä≥} conuvw | _ | _ | _ | _ = conuvw
conAssoc‚ÇÅ {I U u v} {I U‚Ä≤ u‚Ä≤ v‚Ä≤} {I U‚Ä≥ u‚Ä≥ v‚Ä≥} (conUs , (conus , convs)) | _ | _ | _ | _
  = conAssoc‚ÇÅ {U} conUs , (conAssoc‚ÇÅ {u} conus , conAssoc‚ÇÅ {v} convs)
conAssoc‚ÇÅ {u} {Œ† v g} {‚ä•} conuvw | _ | _ | _ | _ = conAssoc' {u ‚äî Œ† v g} conuvw
conAssoc‚ÇÅ {‚ä•} {Œ† v g} {Œ† w h} conuvw | _ | _ | _ | _ = conuvw
conAssoc‚ÇÅ {Œ† u f} {Œ† v g} {Œ† w h} (conuvw , confgh) | _ | _ | _ | _
  = conAssoc‚ÇÅ {u} conuvw , conFinFunAssoc {f = f} confgh
conAssoc‚ÇÅ {u} {ùí∞} {‚ä•} conuvw | _ | _ | _ | _ = conAssoc' {u ‚äî ùí∞} conuvw
conAssoc‚ÇÅ {‚ä•} {ùí∞} {ùí∞} _ | _ | _ | _ | _ = *
conAssoc‚ÇÅ {ùí∞} {ùí∞} {ùí∞} _ | _ | _ | _ | _ = *

conAssoc‚ÇÇ : ‚àÄ {u v w} ‚Üí con ((u ‚äî v) ‚äî w) ‚Üí con (u ‚äî (v ‚äî w))
conAssoc‚ÇÇ {u} {v} {w} conuvw = conSym {v ‚äî w} {u} convw|u
  where conw|uv = conSym {u ‚äî v} {w} conuvw
        conwu|v = conAssoc‚ÇÅ {w} {u} {v} conw|uv
        conv|wu = conSym {w ‚äî u} {v} conwu|v
        convw|u = conAssoc‚ÇÅ {v} {w} {u} conv|wu

conTrans : ‚àÄ {u v w} ‚Üí con (u ‚äî (v ‚äî w)) ‚Üí con (u ‚äî w)
conTrans {u} conuvw with (conLemma‚ÇÅ {u} conuvw) | conLemma‚ÇÇ {u} conuvw
conTrans {u} {v} _ | _ | convw with (conLemma‚ÇÅ {v} convw) | conLemma‚ÇÇ {v} convw
conTrans {u} {v} {‚ä•} _ | conu | _ | _ | _ = conSym {‚ä•} {u} conu
conTrans {u} {‚ä•} {0·µ§} conuvw | _ | _ | _ | _ = conuvw
conTrans {u} {0·µ§} {0·µ§} conuvw | _ | _ | _ | _ = conuvw
conTrans {u} {‚ä•} {s _} conuvw | _ | _ | _ | _ = conuvw
conTrans {‚ä•} {s _} {s _} _ | _ | _ | _ | conw = conw
conTrans {s u} {s _} {s _} conuvw | _ | _ | _ | conw = conTrans {u} conuvw
conTrans {u} {‚ä•} {‚Ñï} conuvw | _ | _ | _ | _ = conuvw
conTrans {u} {‚Ñï} {‚Ñï} conuvw | _ | _ | _ | _ = conuvw
conTrans {u} {‚ä•} {F _} conuvw | _ | _ | _ | _ = conuvw
conTrans {‚ä•} {F _} {F _} _ | _ | _ | _ | conw = conw
conTrans {F f} {F g} {F h} conuvw | _ | _ | _ | _
  = subsetIsCon {g = f ‚à™ (g ‚à™ h)} (‚à™-lemma‚Çá {ùëì = f} ‚à™-lemma‚ÇÑ) conuvw
conTrans {u} {‚ä•} {refl _} conuvw | _ | _ | _ | _ = conuvw
conTrans {‚ä•} {refl _} {refl _} _ | _ | _ | _ | conw = conw
conTrans {refl u} {refl _} {refl _} conuvw | _ | _ | _ | _ = conTrans {u} conuvw
conTrans {u} {‚ä•} {I _ _ _} conuvw | _ | _ | _ | _ = conuvw
conTrans {‚ä•} {I _ _ _} {I _ _ _} _ | _ | _ | _ | conw = conw
conTrans {I U u v} {I U‚Ä≤ u‚Ä≤ v‚Ä≤} {I U‚Ä≥ u‚Ä≥ v‚Ä≥} (conUs , (conus , convs)) | _ | _ | _ | _
  = conTrans {U} conUs , (conTrans {u} conus , conTrans {v} convs)
conTrans {u} {‚ä•} {Œ† _ _} conuvw | _ | _ | _ | _ = conuvw
conTrans {‚ä•} {Œ† _ _} {Œ† _ _} _ | _ | _ | _ | conw = conw
conTrans {Œ† u f} {Œ† v g} {Œ† w h} (conuvw , confgh) | _ | _ | _ | _
  = (conTrans {u} conuvw) , subsetIsCon {g = f ‚à™ (g ‚à™ h)} (‚à™-lemma‚Çá {ùëì = f} ‚à™-lemma‚ÇÑ) confgh
conTrans {u} {‚ä•} {ùí∞} conuvw | _ | _ | _ | _ = conuvw
conTrans {‚ä•} {ùí∞} {ùí∞} _ | _ | _ | _ | _ = *
conTrans {ùí∞} {ùí∞} {ùí∞} _ | _ | _ | _ | _ = *
